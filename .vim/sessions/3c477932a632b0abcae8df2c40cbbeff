let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
inoremap <silent> <S-Tab> =BackwardsSnippet()
inoremap <C-Tab> 	
vnoremap <silent>  :call RangeCommentLine()
nnoremap <silent>  :call CommentLine()
onoremap <silent>  :call CommentLine()
map  h
snoremap <silent> 	 i<Right>=TriggerSnippet()
xmap 	 ! perl  /home/sandeep/.bins/vi_align_pearl -c:=
nmap 	 =
omap 	 =
map <NL> j
map  k
map  l
map  :e#
snoremap  b<BS>
xnoremap <silent>  :call RangeUnCommentLine()
nnoremap <silent>  :call UnCommentLine()
onoremap <silent>  :call UnCommentLine()
nmap <F10> :shell
map  f <Plug>FindMate
map  l :TrinityToggleNERDTree
map  a :TrinityToggleTagList
map  g :TrinityToggleSourceExplorer
map  q :call Komment()
map  ' :set nocursorcolumn
map  ; :set cursorcolumn
map  N :new
map  n :vnew
map  W :w
map  w :w
map  H :Hexplore
map  h :split
map  V :vsplit
map  v :vsplit
map  C :q!
map  c :q!
map  T :tabclose
map  t :tabnew
map  E :VE
map  e :VE
map  O :Vexplore
map  o :NERDTree 
map  \ :source ~/.vim/extras/unibox.vim
map  S :ConqueTermVSplit bash
map  s :ConqueTermSplit bash
map  B :SearchReset 
map  b :Search =expand("<cword>")
nmap "" <Plug>QuotesCIQuotes
snoremap % b<BS>%
snoremap ' b<BS>'
map ,e :e =expand("%:p:h") . "/"
xmap S <Plug>VSurround
snoremap U b<BS>U
vmap [% [%m'gv``
snoremap \ b<BS>\
noremap <silent> \\f :call ReflowTable()
noremap <silent> \\c :call ReformatTable()
map \rwp <Plug>RestoreWinPosn
map \swp <Plug>SaveWinPosn
nmap \caL <Plug>CalendarH
nmap \cal <Plug>CalendarV
nnoremap <silent> \* :execute ':Search \<' . expand('<cword>') . '\>'
vnoremap <silent> \* y:call MultipleSearch#MultipleSearch(0,'\V'.substitute(escape(@@,"\\/\"'"),"\n",'\\n','ge'))
map \ds <Plug>StopDrawIt
map \di <Plug>StartDrawIt
nnoremap \f :%s/\s\+$//
nnoremap \op :Open
nnoremap \fs :Fullscreen
nnoremap \tp :tabprev
nnoremap \tn :tabnext
vmap ]% ]%m'gv``
snoremap ^ b<BS>^
snoremap ` b<BS>`
vmap a% [%v]%
nmap cs <Plug>Csurround
nmap ds <Plug>Dsurround
nmap gx <Plug>NetrwBrowseX
xmap gS <Plug>VgSurround
xmap s <Plug>Vsurround
nmap ySS <Plug>YSsurround
nmap ySs <Plug>YSsurround
nmap yss <Plug>Yssurround
nmap yS <Plug>YSurround
nmap ys <Plug>Ysurround
snoremap <Left> bi
snoremap <Right> a
snoremap <BS> b<BS>
snoremap <silent> <S-Tab> i<Right>=BackwardsSnippet()
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
map <silent> <M-Up> :Msearch! previous
map <silent> <M-Right> :Msearch direction forward
map <silent> <M-Down> :Msearch! next
map <silent> <M-Left> :Msearch direction reverse
map <silent> <M-Del> :Msearch delete
nnoremap <silent> <F11> :call conque_term#exec_file()
nmap <silent> <Plug>RestoreWinPosn :call RestoreWinPosn()
nmap <silent> <Plug>SaveWinPosn :call SaveWinPosn()
nnoremap <silent> <Plug>CalendarH :cal Calendar(1)
nnoremap <silent> <Plug>CalendarV :cal Calendar(0)
map <silent> <Plug>StopDrawIt :set lz:call DrawIt#StopDrawIt():set nolz
map <silent> <Plug>StartDrawIt :set lz:call DrawIt#StartDrawIt():set nolz
nmap <F8> :TrinityToggleAll
nmap <F10> :ConqueTermSplit bash
nmap <F3> :bn!
nmap <F2> :bp!
imap S <Plug>ISurround
imap s <Plug>Isurround
inoremap <silent> 	 =TriggerSnippet()
imap  <Plug>SuperTabForward
imap  <Plug>SuperTabBackward
inoremap <silent> 	 =ShowAvailableSnips()
imap  <Plug>Isurround
imap  	
imap      
map <silent> Â¶ :Msearch! direction
map <silent> Â¯ :Msearch add
map <silent> Â± :Msearch! search
map <silent> Ã©L :Msearch! highlight list
map <silent> Ã©l :Msearch highlight list
map <silent> Ã° :Msearch previous
map <silent> Ã©S :Msearch! highlight shuffle
map <silent> Ã® :Msearch next
map <silent> Ã©s :Msearch highlight shuffle
map <silent> Ã± :Msearch! enable
map <silent> Ãœ :Msearch search
map <silent> Ã¬ :Msearch list
map <silent> Ã¡ :Msearch! add
inoremap \op :Open
inoremap \fs :Fullscreen
inoremap \tp :tabprev
inoremap \tn :tabnext
let &cpo=s:cpo_save
unlet s:cpo_save
set autoindent
set background=dark
set backspace=indent,eol,start
set cindent
set expandtab
set fileencodings=ucs-bom,utf-8,default,latin1
set foldopen=block,hor,insert,mark,percent,quickfix,search,tag,undo
set helplang=en
set history=500
set hlsearch
set ignorecase
set incsearch
set keywordprg=man
set laststatus=2
set matchpairs=(:),{:},[:],<:>,=:;
set nomodeline
set mouse=r
set omnifunc=syntaxcomplete#Complete
set printoptions=paper:letter
set ruler
set runtimepath=~/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim73,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,~/.vim/after
set shiftround
set shiftwidth=4
set showcmd
set showmatch
set smartcase
set smartindent
set softtabstop=4
set statusline=%-f%r\ %2*%m%*\ \ \ \ %1*%{TagInStatusLine()}%*%=[%l:%c]\ \ \ \ [buf\ %n]
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc
set tabstop=4
set updatecount=50
set updatetime=1000
set virtualedit=all
set wildmenu
set wildmode=list:longest,full
set window=51
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/repos/ssdcache/tools/vmware/lib
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +0 ~/.vim/plugin/AutoFold.vim
silent! argdel *
edit ~/.vim/plugin/AutoFold.vim
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
vnoremap <buffer> <silent> [" :exe "normal! gv"|call search('\%(^\s*".*\n\)\%(^\s*"\)\@!', "bW")
nnoremap <buffer> <silent> [" :call search('\%(^\s*".*\n\)\%(^\s*"\)\@!', "bW")
vnoremap <buffer> <silent> [] m':exe "normal! gv"|call search('^\s*endf*\%[unction]\>', "bW")
nnoremap <buffer> <silent> [] m':call search('^\s*endf*\%[unction]\>', "bW")
vnoremap <buffer> <silent> [[ m':exe "normal! gv"|call search('^\s*fu\%[nction]\>', "bW")
nnoremap <buffer> <silent> [[ m':call search('^\s*fu\%[nction]\>', "bW")
vnoremap <buffer> <silent> ]" :exe "normal! gv"|call search('^\(\s*".*\n\)\@<!\(\s*"\)', "W")
nnoremap <buffer> <silent> ]" :call search('^\(\s*".*\n\)\@<!\(\s*"\)', "W")
vnoremap <buffer> <silent> ][ m':exe "normal! gv"|call search('^\s*endf*\%[unction]\>', "W")
nnoremap <buffer> <silent> ][ m':call search('^\s*endf*\%[unction]\>', "W")
vnoremap <buffer> <silent> ]] m':exe "normal! gv"|call search('^\s*fu\%[nction]\>', "W")
nnoremap <buffer> <silent> ]] m':call search('^\s*fu\%[nction]\>', "W")
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=sO:\"\ -,mO:\"\ \ ,eO:\"\",:\"
setlocal commentstring=\"%s
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'vim'
setlocal filetype=vim
endif
setlocal foldcolumn=0
setlocal foldenable
set foldexpr=SF_SetFolds()
setlocal foldexpr=SF_SetFolds()
setlocal foldignore=#
setlocal foldlevel=3
setlocal foldmarker={{{,}}}
set foldmethod=expr
setlocal foldmethod=expr
setlocal foldminlines=1
set foldnestmax=5000
setlocal foldnestmax=5000
set foldtext=SFT_SetFoldText()
setlocal foldtext=SFT_SetFoldText()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=GetVimIndent()
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e,=end,=else,=cat,=fina,=END,0\\
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,#
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:],<:>,=:;
setlocal nomodeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
set numberwidth=5
setlocal numberwidth=5
setlocal omnifunc=syntaxcomplete#Complete
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal smartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'vim'
setlocal syntax=vim
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=78
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
let s:l = 197 - ((24 * winheight(0) + 25) / 50)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
197
normal! 02l
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
